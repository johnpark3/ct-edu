---
title: "Regions to PUMAs"
output: github_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = TRUE,
	message = FALSE,
	warning = FALSE,
	fig.showtext = T
)
```

```{r}
library(tidyverse)
library(sf)
library(cwi)
```

I have to use PUMS files for getting household income quintiles, because the top ones are capped in a lot of places. There's a good amount of overlap between town-regions and clusters of PUMAs, except for the Valley

```{r}
regions_sf <- cwi::regions[c("Greater New Haven", "Greater Hartford", "Fairfield County", "Lower Naugatuck Valley")] %>%
  c(list(`Greater New London` = c("East Lyme", "Groton", "Ledyard", "Lyme", "Montville", "New London", 
"North Stonington", "Old Lyme", "Stonington", "Waterford"))) %>%
  imap_dfr(~tibble(region = .y, name = .x)) %>%
  inner_join(town_sf, by = "name") %>%
  st_as_sf() %>%
  group_by(region) %>%
  summarise()
```

```{r include=FALSE}
puma_sf <- tigris::pumas(state = "09", cb = T, class = "sf") %>%
  select(id = PUMACE10, puma = NAME10, geometry)
```

```{r}
ggplot() +
  geom_sf(aes(fill = region), data = regions_sf, alpha = 0.6, color = NA) +
  geom_sf(data = puma_sf, fill = "transparent", size = 0.2)
```

```{r eval=FALSE, include=FALSE}
puma_sf %>%
  filter(id == "01101") %>%
  st_intersection(town_sf) %>%
  mutate(a2 = st_area(geometry) %>% units::drop_units(),
         dim = st_dimension(geometry)) %>%
  filter(a2 > 5e3, dim > 1) %>%
  ggplot() +
    geom_sf() +
    geom_sf_text(aes(label = name), size = 2.4)

puma_sf %>%
  filter(id == "01101") %>%
  ggplot() +
    geom_sf(data = town_sf %>% filter(name %in% gnl), color = "blue", fill = "transparent") +
    geom_sf_text(aes(label = name), data = town_sf %>% filter(name %in% gnl), size = 2.8) +
    geom_sf(fill = "pink", alpha = 0.3)

gnl_pop <- multi_geo_acs("B01003", towns = gnl, regions = list(greater_new_london = gnl), counties = "New London")
```

```{r eval=FALSE, include=FALSE}
gnl_pop %>%
  janitor::clean_names() %>%
  mutate(region = as_factor(name) %>%
           fct_collapse(puma = c("Lyme", "Old Lyme", "East Lyme", "Waterford", "New London", "Groton", "Stonington"))) %>%
  group_by(region) %>%
  summarise(pop = sum(estimate))
```

77 percent of Greater New London's population is in PUMA 01101 (New London County south). PUMA 01100 is New London County north. South PUMA doesn't include Ledyard, Montville, or North Stonington, but for just looking at a few broad things like income inequality, it should be close enough.

Valley isn't going to work.

```{r}
regions_sf <- regions_sf %>% filter(!str_detect(region, "Valley"))
```


```{r}
st_intersection(puma_sf, regions_sf) %>%
  st_collection_extract("POLYGON") %>%
  mutate(area = st_area(.)) %>%
  mutate(a2 = units::drop_units(area)) %>%
  filter(a2 > 1e6) %>%
  st_set_geometry(NULL) %>%
  knitr::kable(format = "markdown")
```

* Greater Hartford = approx all of Hartford County, approx all of Tolland County
* Fairfield County = all of Fairfield County, duh
* Greater New Haven = East Haven, Branford, Guilford, Madison, North Branford, West Haven, Milford, Orange, New Haven, Hamden, Woodbridge, Bethany, *Ansonia, Seymour, Derby*. Adds 3 valley towns, loses North Haven (902)

Final version for these 3 regions:

```{r}
st_intersection(puma_sf, regions_sf) %>%
  st_collection_extract("POLYGON") %>%
  mutate(area = st_area(.)) %>%
  mutate(a2 = units::drop_units(area)) %>%
  filter(a2 > 1e6) %>%
  st_set_geometry(NULL) %>%
  filter(!id %in% c("00902", "01100")) %>%
  select(-area, -a2) %>%
  saveRDS(file = "./region2puma.rds")
```

