library(tidyverse)
library(openxlsx)
library(camiller)
library(cwi)

source("./_utils/df_to_xlsx.R")
source("./_utils/format_table_utils.R")
source("./_utils/geographies.R")

health_wb <- createWorkbook(title = "health")
health_path <- file.path("health/output_data")

################ TABLE 1: HEALTH RISK FACTORS
risk <- file.path(health_path, "cws_health_risk_factors_2018.csv") %>%
  read_csv() %>%
  mutate(indicator = as_factor(indicator) %>%
           fct_recode(very_good_self_rated_health = "self_rated_health",
                      current_asthma = "asthma",
                      has_health_insurance = "health_insurance",
                      dental_visit_past_yr = "dentist")) %>%
  select(-name) %>%
  rename(name = proper_name) %>%
  mutate(name = if_else(name == "5ct", cap_first(group), name)) %>%
  mutate_at(vars(name, category, group), as_factor) %>%
  mutate_at(vars(name, group), fct_recode, "Lower Naugatuck Valley" = "Valley")

risk_location_tbl <- risk %>%
  filter(category %in% c("Total", "Wealthy", "Urban Core")) %>%
  select(indicator, name, value) %>%
  spread(key = indicator, value = value) %>%
  mutate_if(is.factor, fct_drop)

risk_group_tbl <- risk %>%
  filter(name %in% c("Fairfield County", "Greater New Haven", "Greater Hartford", "Lower Naugatuck Valley"),
         category %in% c("Total", "Age", "Race/Ethnicity", "Income")) %>%
  select(-year, -response) %>%
  spread(key = indicator, value = value) %>%
  mutate_if(is.factor, fct_drop)


#################### TABLE 2: OVERDOSE DEATHS
drugs <- file.path(health_path, "age_adj_drug_deaths_2015_2018.rds") %>%
  readRDS()

substance_tbl <- drugs$by_substance %>%
  filter(name %in% main_regions, is_opioid != "no_opiate_opioid") %>%
  select(name, is_opioid, count = n, rate = annualized_age_adj_rate100k) %>%
  mutate(name = as_factor(name) %>% fct_relevel(main_regions),
         is_opioid = is_opioid %>%
           fct_recode("opiate/opioid" = "opiate_opioid") %>%
           fct_relabel(str_replace_all, "_", " ")) %>%
  make_wide(count, rate, group = is_opioid)

drug_race_tbl <- drugs$by_race %>%
  filter(name %in% main_regions) %>%
  select(name, race, count = n, rate = annualized_age_adj_rate100k) %>%
  mutate(name = as_factor(name) %>% fct_relevel(main_regions)) %>%
  make_wide(count, rate, group = race) %>%
  filter(!is.na(black_count)) 


################# PERSONAL WELLBEING INDEX
pwi_parts <- file.path(health_path, "cws_pwi_components.csv") %>%
  read_csv() %>%
  select(-year) %>%
  mutate_at(vars(category, group), as_factor) %>%
  spread(key = indicator, value = value)
pwi_score <- file.path(health_path, "cws_personal_wellbeing_index.csv") %>%
  read_csv() %>%
  select(name, category, group, personal_wellbeing_index = composite_scaled)

pwi_tbl <- inner_join(pwi_parts, pwi_score, by = c("name", "category", "group")) %>%
  mutate(name = name %>% str_replace_all("_", " ") %>% str_to_title()) %>%
  filter(name %in% c("Fairfield County", "Greater New Haven", "Greater Hartford", "Valley", "5ct") | category == "Total") %>%
  mutate(name = if_else(name == "5ct", cap_first(group), name),
         group = if_else(category == "Total", name, group)) %>%
  mutate_at(vars(name, group), fct_recode, "Lower Naugatuck Valley" = "Valley") %>%
  mutate_at(vars(category, group), as_factor)


################### ACCESS TO CARE
miss_care <- file.path(health_path, "cws_missed_care_2018.csv") %>%
  read_csv() %>%
  select(name = proper_name, category, group, key, value) %>%
  mutate(key = fct_recode(key, postponed_care = "postponed")) %>%
  spread(key = key, value = value)

med_home <- file.path(health_path, "cws_no_medical_home_2018.csv") %>%
  read_csv() %>%
  select(name = proper_name, category, group, indicator, value) %>%
  spread(key = indicator, value)

med_access_tbl <- left_join(
  miss_care,
  med_home,
  by = c("name", "category", "group")
) %>%
  mutate_at(vars(category, group), as_factor) %>%
  mutate(category = fct_relevel(category, "Total")) %>%
  filter(name %in% c("Fairfield County", "Greater New Haven", "Greater Hartford", "Valley", "5ct") | category == "Total") %>%
  mutate(name = if_else(name == "5ct", cap_first(group), name)) %>%
  mutate_at(vars(category, group), as_factor) %>%
  mutate_at(vars(name, group), fct_recode, "Lower Naugatuck Valley" = "Valley") %>%
  arrange(name, category)


############## DISCRIMINATION EXPERIENCES
# workplace, police, moving, services
discrim <- file.path(health_path, "cws_discrimination_exp_list_2018.rds") %>%
  readRDS() %>%
  `[[`("values") %>%
  mutate(name = name %>%
           fct_relabel(str_replace_all, "_", " ") %>%
           fct_relabel(str_to_title) %>%
           fct_recode("Lower Naugatuck Valley" = "Valley")) %>%
  mutate(group = if_else(category == "Total", as.character(name), as.character(group)) %>%
           as_factor()) %>%
  filter(question %in% c("workplace", "police_stops", "received_poor_service", "prevented_from_moving")) %>%
  filter(name %in% c("Fairfield County", "Greater New Haven", "Greater Hartford", "Lower Naugatuck Valley") | (category == "Total" & name != "5ct") | (category != "Total" & name == "5ct")) %>%
  mutate(name = if_else(name == "5ct", cap_first(as.character(group)), as.character(name)) %>%
           as_factor()) %>%
  select(-year, -response)

discrim_tbl <- discrim %>%
  mutate(question = fct_relevel(question, "received_poor_service", after = Inf)) %>%
  spread(key = question, value = value)


########## OUTPUT #####################
# split dfs for each document
# cws_docs <- list(
#   fairfield_county = union(docs$fairfield_county_abbr, docs$fairfield_county_towns),
#   greater_new_haven = union(docs$greater_new_haven_abbr, docs$greater_new_haven_towns),
#   greater_hartford = union(docs$greater_hartford_abbr, docs$greater_hartford_towns),
#   valley = docs$valley
# )

health_risk_by_location <- docs[c("fairfield_county_abbr", "greater_new_haven_abbr", "greater_hartford_abbr", "valley")] %>%
  split_by_doc(risk_location_tbl)

health_risk_by_group <- list(
  fairfield_county = "Fairfield County",
  greater_new_haven = "Greater New Haven",
  greater_hartford = "Greater Hartford",
  valley = "Lower Naugatuck Valley"
) %>%
  split_by_doc(risk_group_tbl)

overdose_deaths_by_substance <- docs[c("fairfield_county_abbr", "greater_new_haven_abbr", "greater_hartford_abbr", "valley")] %>%
  split_by_doc(substance_tbl)

overdose_deaths_by_race <- docs[c("fairfield_county_abbr", "greater_new_haven_abbr", "greater_hartford_abbr", "valley")] %>%
  split_by_doc(drug_race_tbl)

personal_wellbeing <- docs[c("fairfield_county_abbr", "greater_new_haven_abbr", "greater_hartford_abbr", "valley")] %>%
  split_by_doc(pwi_tbl)

access_to_care <- docs[c("fairfield_county_abbr", "greater_new_haven_abbr", "greater_hartford_abbr", "valley")] %>%
  split_by_doc(med_access_tbl)

discrimination_experiences <- docs[c("fairfield_county_abbr", "greater_new_haven_abbr", "greater_hartford_abbr", "valley")] %>%
  split_by_doc(discrim_tbl)


dfs <- lst(
  health_risk_by_location, 
  health_risk_by_group, 
  overdose_deaths_by_substance, 
  overdose_deaths_by_race,
  personal_wellbeing,
  access_to_care,
  discrimination_experiences
) %>%
  map(set_names, str_remove, "_abbr") %>%
  transpose()


# WRITE OUT
titles <- c(
  "Health risk factors by location",
  "Health risk factors by group",
  "Overdose deaths by substance",
  "Overdose deaths by race",
  "Personal wellbeing index",
  "Access to medical care",
  "Experiences of discrimination"
)
subtitles <- c(
  "Well-being and chronic disease risk factors, {name}, 2018",
  "Well-being and chronic disease risk factors, {name}, 2018",
  "Total count and annualized age-adjusted overdose death rate per 100k residents by presence of opiates or opioids, {name}, 2015-2018",
  "Total count and annualized age-adjusted overdose death rate per 100k residents by race, {name}, 2015-2018",
  "Personal Wellbeing Index and components, {name}, 2018",
  "Share of adults, {name}, 2018",
  "Share of adults having ever experienced discrimination, {name}, 2018"
)
fmt_list <- list(
  health_risk_by_location = list(
    "0%" = 2:11
  ),
  health_risk_by_group = list(
    "0%" = 4:13
  ),
  overdose_deaths_by_substance = list(
    COMMA = c(2, 4),
    "0.0" = c(3, 5)
  ),
  overdose_deaths_by_race = list(
    COMMA = c(2, 4, 6),
    "0.0" = c(3, 5, 7)
  ),
  personal_wellbeing = list(
    "0%" = 4:7,
    "0" = 8
  ),
  access_to_care = list(
    "0%" = 4:6
  ),
  discrimination_experiences = list(
    "0%" = 4:7
  )
)

write_tbl_list(dfs, 
               "health draft tables", 
               path = "health/format_tables",
               file_name = "health_format_tbls.xlsx",
               titles = titles,
               subtitles = subtitles,
               fmt_list = fmt_list)
